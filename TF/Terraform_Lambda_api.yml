trigger:
  branches:
    include:
    - refs/heads/develop
    - refs/heads/hom
    - refs/heads/main
  paths:
    include:
    - path/Terraform/Lambda/<projet-name>
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/develop
jobs:
- job: Job_1
  displayName: Lambda_<projet-name>
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    clean: False
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: <path>/DevOps/Terraform/Lambda/<projet-name>
      TargetFolder: $(Build.ArtifactStagingDirectory)
      CleanTargetFolder: true
      OverWrite: true
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
    displayName: 'Terraform: init'
    inputs:
      provider: aws
      workingDirectory: $(Build.ArtifactStagingDirectory)/Terraform
      commandOptions: '-backend-config=../DEV/backend.conf -no-color '
      backendServiceAWS: <0000000000000>
      backendAWSBucketName: 0000000-terraform-state-bucket-0000000
      backendAWSKey: lambda/path/<projet-name>.tfstate
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
    displayName: 'Terraform: validate'
    inputs:
      provider: aws
      command: validate
      workingDirectory: $(Build.ArtifactStagingDirectory)/Terraform
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
    displayName: 'Terraform: plan'
    inputs:
      provider: aws
      command: plan
      workingDirectory: $(Build.ArtifactStagingDirectory)/Terraform
      commandOptions: -var-file="$(Build.ArtifactStagingDirectory)/DEV/ambiente.tfvars" -no-color
      environmentServiceNameAWS: <0000000000000>
  - task: DeleteFiles@1
    displayName: Delete files from **/.terraform/*
    continueOnError: True
    inputs:
      SourceFolder: $(Build.ArtifactStagingDirectory)
      Contents: >-
        **/.terraform/*

        Terraform/.terraform.lock.hcl
      RemoveDotFiles: true
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      ArtifactName: $(System.JobDisplayName)
...
